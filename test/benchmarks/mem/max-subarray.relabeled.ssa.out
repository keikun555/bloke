@pack(size.0: int, n1.0: int, n2.0: int, n3.0: int, n4.0: int, n5.0: int, n6.0: int, n7.0: int, n8.0: int, n9.0: int, n10.0: int): ptr<int> {
.pack.b0:
  size.1: int = id size.0;
  n1.1: int = id n1.0;
  n2.1: int = id n2.0;
  n3.1: int = id n3.0;
  n4.1: int = id n4.0;
  n5.1: int = id n5.0;
  n6.1: int = id n6.0;
  n7.1: int = id n7.0;
  n8.1: int = id n8.0;
  n9.1: int = id n9.0;
  n10.1: int = id n10.0;
.pack.b1:
  one.0.0: int = const 1;
  i.0.0: int = const 0;
  array.0.0: ptr<int> = alloc size.0;
  loc.0.0: ptr<int> = ptradd array.0.0 i.0.0;
  store loc.0.0 n1.0;
  i.0.1: int = add i.0.0 one.0.0;
  loc.0.1: ptr<int> = ptradd array.0.0 i.0.1;
  store loc.0.1 n2.0;
  i.0.2: int = add i.0.1 one.0.0;
  loc.0.2: ptr<int> = ptradd array.0.0 i.0.2;
  store loc.0.2 n3.0;
  i.0.3: int = add i.0.2 one.0.0;
  loc.0.3: ptr<int> = ptradd array.0.0 i.0.3;
  store loc.0.3 n4.0;
  i.0.4: int = add i.0.3 one.0.0;
  loc.0.4: ptr<int> = ptradd array.0.0 i.0.4;
  store loc.0.4 n5.0;
  i.0.5: int = add i.0.4 one.0.0;
  loc.0.5: ptr<int> = ptradd array.0.0 i.0.5;
  store loc.0.5 n6.0;
  i.0.6: int = add i.0.5 one.0.0;
  loc.0.6: ptr<int> = ptradd array.0.0 i.0.6;
  store loc.0.6 n7.0;
  i.0.7: int = add i.0.6 one.0.0;
  loc.0.7: ptr<int> = ptradd array.0.0 i.0.7;
  store loc.0.7 n8.0;
  i.0.8: int = add i.0.7 one.0.0;
  loc.0.8: ptr<int> = ptradd array.0.0 i.0.8;
  store loc.0.8 n9.0;
  i.0.9: int = add i.0.8 one.0.0;
  loc.0.9: ptr<int> = ptradd array.0.0 i.0.9;
  store loc.0.9 n10.0;
  ret array.0.0;
}
@max(n.0: int, m.0: int): int {
.max.b0:
  n.1: int = id n.0;
  m.1: int = id m.0;
.max.b1:
  condi.0.0: bool = lt n.0 m.0;
  br condi.0.0 .less .biggereq;
.less:
  ret m.0;
.biggereq:
  ret n.0;
}
@main(size.0: int, n1.0: int, n2.0: int, n3.0: int, n4.0: int, n5.0: int, n6.0: int, n7.0: int, n8.0: int, n9.0: int, n10.0: int) {
.main.b0:
  size.1: int = id size.0;
  n1.1: int = id n1.0;
  n2.1: int = id n2.0;
  n3.1: int = id n3.0;
  n4.1: int = id n4.0;
  n5.1: int = id n5.0;
  n6.1: int = id n6.0;
  n7.1: int = id n7.0;
  n8.1: int = id n8.0;
  n9.1: int = id n9.0;
  n10.1: int = id n10.0;
.main.b1:
  array.0.0: ptr<int> = call @pack size.0 n1.0 n2.0 n3.0 n4.0 n5.0 n6.0 n7.0 n8.0 n9.0 n10.0;
  sum.0.0: int = const 0;
  max_sum.0.0: int = const 0;
  one.0.0: int = const 1;
  zero.0.0: int = const 0;
  i.0.0: int = const 0;
.loop:
  sum_incr.0.0: int = phi sum_incr.0.1 .bodyi;
  sum.0.1: int = phi sum.0.0 sum.0.2 .main.b1 .bodyi;
  max_sum.0.1: int = phi max_sum.0.0 max_sum.0.2 .main.b1 .bodyi;
  loc.0.0: ptr<int> = phi loc.0.1 .bodyi;
  i.0.1: int = phi i.0.0 i.0.2 .main.b1 .bodyi;
  elem.0.0: int = phi elem.0.1 .bodyi;
  condi.0.0: bool = phi condi.0.1 .bodyi;
  condi.0.1: bool = lt i.0.1 size.0;
  br condi.0.1 .bodyi .done;
.bodyi:
  loc.0.1: ptr<int> = ptradd array.0.0 i.0.1;
  elem.0.1: int = load loc.0.1;
  sum_incr.0.1: int = add sum.0.1 elem.0.1;
  sum.0.2: int = call @max zero.0.0 sum_incr.0.1;
  max_sum.0.2: int = call @max max_sum.0.1 sum.0.2;
  i.0.2: int = add i.0.1 one.0.0;
  jmp .loop;
.done:
  print max_sum.0.1;
  free array.0.0;
}
