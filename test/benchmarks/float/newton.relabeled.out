@main {
  n.0: float = const 99999;
  two.0: float = const 2;
  x.0: float = fdiv n.0 two.0;
  prev_x.0: float = id n.0;
  target.0: float = const 1e-05;
.for.cond.1:
  d.0: float = call @diff prev_x.0 x.0;
  v6.0: bool = fgt d.0 target.0;
  br v6.0 .for.body.1 .for.end.1;
.for.body.1:
  prev_x.0: float = id x.0;
  x.0: float = call @sqrt x.0 n.0;
  jmp .for.cond.1;
.for.end.1:
  print x.0;
}
@sqrt(x.0: float, n.0: float): float {
  two.0: float = const 2;
  v0.0: float = fmul x.0 x.0;
  v1.0: float = fsub v0.0 n.0;
  v2.0: float = fmul two.0 x.0;
  v3.0: float = fdiv v1.0 v2.0;
  v4.0: float = fsub x.0 v3.0;
  ret v4.0;
}
@diff(a.0: float, b.0: float): float {
  c.0: bool = fgt a.0 b.0;
  br c.0 .then.1 .else.1;
.then.1:
  v5.0: float = fsub a.0 b.0;
  ret v5.0;
.else.1:
  v5.0: float = fsub b.0 a.0;
  ret v5.0;
}
