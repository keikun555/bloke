@main(theta: float) {
  v0.0: float = id theta.0;
  x.0: float = call @cordic v0.0;
  x.0: float = id x.0;
  v1.0: float = id x.0;
  print v1.0;
  v2.0: int = const 0;
}
@cordic(theta: float): float {
  v0.0: float = const 0.7853981633974483;
  cstab0.0: float = id v0.0;
  v1.0: float = const 0.4636476090008061;
  cstab1.0: float = id v1.0;
  v2.0: float = const 0.24497866312686414;
  cstab2.0: float = id v2.0;
  v3.0: float = const 0.12435499454676144;
  cstab3.0: float = id v3.0;
  v4.0: float = const 0.06241880999595735;
  cstab4.0: float = id v4.0;
  v5.0: float = const 0.031239833430268277;
  cstab5.0: float = id v5.0;
  v6.0: float = const 0.015623728620476831;
  cstab6.0: float = id v6.0;
  v7.0: float = const 0.007812341060101111;
  cstab7.0: float = id v7.0;
  v8.0: float = const 0;
  gamma.0: float = id v8.0;
  v9.0: float = const 0;
  lsin.0: float = id v9.0;
  v10.0: float = const 0.6072529350088812;
  lcos.0: float = id v10.0;
  v11.0: float = const 1;
  divisor.0: float = id v11.0;
  v13.0: int = const 0;
  i.0: int = id v13.0;
.for.cond.12:
  v14.0: int = id i.0;
  v15.0: int = const 8;
  v16.0: bool = lt v14.0 v15.0;
  br v16.0 .for.body.12 .for.end.12;
.for.body.12:
  v17.0: float = id theta.0;
  v18.0: float = id gamma.0;
  v19.0: float = fsub v17.0 v18.0;
  v20.0: float = const 0;
  v21.0: bool = fgt v19.0 v20.0;
  clockwise.0: bool = id v21.0;
  v22.0: float = id lsin.0;
  v23.0: float = id divisor.0;
  v24.0: float = fdiv v22.0 v23.0;
  sine_shifted.0: float = id v24.0;
  v25.0: float = id lcos.0;
  v26.0: float = id divisor.0;
  v27.0: float = fdiv v25.0 v26.0;
  cosine_shifted.0: float = id v27.0;
  v28.0: float = id divisor.0;
  v29.0: float = const 2;
  v30.0: float = fmul v28.0 v29.0;
  divisor.0: float = id v30.0;
  v32.0: bool = id clockwise.0;
  br v32.0 .then.31 .else.31;
.then.31:
  v33.0: float = id lsin.0;
  v34.0: float = id cosine_shifted.0;
  v35.0: float = fadd v33.0 v34.0;
  lsin.0: float = id v35.0;
  v36.0: float = id lcos.0;
  v37.0: float = id sine_shifted.0;
  v38.0: float = fsub v36.0 v37.0;
  lcos.0: float = id v38.0;
  v40.0: int = id i.0;
  v41.0: int = const 0;
  v42.0: bool = eq v40.0 v41.0;
  br v42.0 .then.39 .else.39;
.then.39:
  v43.0: float = id gamma.0;
  v44.0: float = id cstab0.0;
  v45.0: float = fadd v43.0 v44.0;
  gamma.0: float = id v45.0;
  jmp .endif.39;
.else.39:
  v47.0: int = id i.0;
  v48.0: int = const 1;
  v49.0: bool = eq v47.0 v48.0;
  br v49.0 .then.46 .else.46;
.then.46:
  v50.0: float = id gamma.0;
  v51.0: float = id cstab1.0;
  v52.0: float = fadd v50.0 v51.0;
  gamma.0: float = id v52.0;
  jmp .endif.46;
.else.46:
  v54.0: int = id i.0;
  v55.0: int = const 2;
  v56.0: bool = eq v54.0 v55.0;
  br v56.0 .then.53 .else.53;
.then.53:
  v57.0: float = id gamma.0;
  v58.0: float = id cstab2.0;
  v59.0: float = fadd v57.0 v58.0;
  gamma.0: float = id v59.0;
  jmp .endif.53;
.else.53:
  v61.0: int = id i.0;
  v62.0: int = const 3;
  v63.0: bool = eq v61.0 v62.0;
  br v63.0 .then.60 .else.60;
.then.60:
  v64.0: float = id gamma.0;
  v65.0: float = id cstab3.0;
  v66.0: float = fadd v64.0 v65.0;
  gamma.0: float = id v66.0;
  jmp .endif.60;
.else.60:
  v68.0: int = id i.0;
  v69.0: int = const 4;
  v70.0: bool = eq v68.0 v69.0;
  br v70.0 .then.67 .else.67;
.then.67:
  v71.0: float = id gamma.0;
  v72.0: float = id cstab4.0;
  v73.0: float = fadd v71.0 v72.0;
  gamma.0: float = id v73.0;
  jmp .endif.67;
.else.67:
  v75.0: int = id i.0;
  v76.0: int = const 5;
  v77.0: bool = eq v75.0 v76.0;
  br v77.0 .then.74 .else.74;
.then.74:
  v78.0: float = id gamma.0;
  v79.0: float = id cstab5.0;
  v80.0: float = fadd v78.0 v79.0;
  gamma.0: float = id v80.0;
  jmp .endif.74;
.else.74:
  v82.0: int = id i.0;
  v83.0: int = const 6;
  v84.0: bool = eq v82.0 v83.0;
  br v84.0 .then.81 .else.81;
.then.81:
  v85.0: float = id gamma.0;
  v86.0: float = id cstab6.0;
  v87.0: float = fadd v85.0 v86.0;
  gamma.0: float = id v87.0;
  jmp .endif.81;
.else.81:
  v88.0: float = id gamma.0;
  v89.0: float = id cstab7.0;
  v90.0: float = fadd v88.0 v89.0;
  gamma.0: float = id v90.0;
.endif.81:
.endif.74:
.endif.67:
.endif.60:
.endif.53:
.endif.46:
.endif.39:
  jmp .endif.31;
.else.31:
  v91.0: float = id lsin.0;
  v92.0: float = id cosine_shifted.0;
  v93.0: float = fsub v91.0 v92.0;
  lsin.0: float = id v93.0;
  v94.0: float = id lcos.0;
  v95.0: float = id sine_shifted.0;
  v96.0: float = fadd v94.0 v95.0;
  lcos.0: float = id v96.0;
  v98.0: int = id i.0;
  v99.0: int = const 0;
  v100.0: bool = eq v98.0 v99.0;
  br v100.0 .then.97 .else.97;
.then.97:
  v101.0: float = id gamma.0;
  v102.0: float = id cstab0.0;
  v103.0: float = fsub v101.0 v102.0;
  gamma.0: float = id v103.0;
  jmp .endif.97;
.else.97:
  v105.0: int = id i.0;
  v106.0: int = const 1;
  v107.0: bool = eq v105.0 v106.0;
  br v107.0 .then.104 .else.104;
.then.104:
  v108.0: float = id gamma.0;
  v109.0: float = id cstab1.0;
  v110.0: float = fsub v108.0 v109.0;
  gamma.0: float = id v110.0;
  jmp .endif.104;
.else.104:
  v112.0: int = id i.0;
  v113.0: int = const 2;
  v114.0: bool = eq v112.0 v113.0;
  br v114.0 .then.111 .else.111;
.then.111:
  v115.0: float = id gamma.0;
  v116.0: float = id cstab2.0;
  v117.0: float = fsub v115.0 v116.0;
  gamma.0: float = id v117.0;
  jmp .endif.111;
.else.111:
  v119.0: int = id i.0;
  v120.0: int = const 3;
  v121.0: bool = eq v119.0 v120.0;
  br v121.0 .then.118 .else.118;
.then.118:
  v122.0: float = id gamma.0;
  v123.0: float = id cstab3.0;
  v124.0: float = fsub v122.0 v123.0;
  gamma.0: float = id v124.0;
  jmp .endif.118;
.else.118:
  v126.0: int = id i.0;
  v127.0: int = const 4;
  v128.0: bool = eq v126.0 v127.0;
  br v128.0 .then.125 .else.125;
.then.125:
  v129.0: float = id gamma.0;
  v130.0: float = id cstab4.0;
  v131.0: float = fsub v129.0 v130.0;
  gamma.0: float = id v131.0;
  jmp .endif.125;
.else.125:
  v133.0: int = id i.0;
  v134.0: int = const 5;
  v135.0: bool = eq v133.0 v134.0;
  br v135.0 .then.132 .else.132;
.then.132:
  v136.0: float = id gamma.0;
  v137.0: float = id cstab5.0;
  v138.0: float = fsub v136.0 v137.0;
  gamma.0: float = id v138.0;
  jmp .endif.132;
.else.132:
  v140.0: int = id i.0;
  v141.0: int = const 6;
  v142.0: bool = eq v140.0 v141.0;
  br v142.0 .then.139 .else.139;
.then.139:
  v143.0: float = id gamma.0;
  v144.0: float = id cstab6.0;
  v145.0: float = fsub v143.0 v144.0;
  gamma.0: float = id v145.0;
  jmp .endif.139;
.else.139:
  v146.0: float = id gamma.0;
  v147.0: float = id cstab7.0;
  v148.0: float = fsub v146.0 v147.0;
  gamma.0: float = id v148.0;
.endif.139:
.endif.132:
.endif.125:
.endif.118:
.endif.111:
.endif.104:
.endif.97:
.endif.31:
  v149.0: int = id i.0;
  v150.0: int = const 1;
  v151.0: int = add v149.0 v150.0;
  i.0: int = id v151.0;
  jmp .for.cond.12;
.for.end.12:
  v152.0: float = id lsin.0;
  ret v152.0;
}
