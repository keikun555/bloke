@sumOfSquares(n.0: int): int {
.sumOfSquares.b0:
  n.1: int = id n.0;
.sumOfSquares.b1:
  v0.0.0: int = const 0;
  res.0.0: int = id v0.0.0;
  v2.0.0: int = const 1;
  i.0.0: int = id v2.0.0;
.for.cond.1:
  v9.0.0: int = phi v9.0.1 .for.body.1;
  v8.0.0: int = phi v8.0.1 .for.body.1;
  v7.0.0: int = phi v7.0.1 .for.body.1;
  v6.0.0: int = phi v6.0.1 .for.body.1;
  v5.0.0: bool = phi v5.0.1 .for.body.1;
  v4.0.0: int = phi v4.0.1 .for.body.1;
  v3.0.0: int = phi v3.0.1 .for.body.1;
  v14.0.0: int = phi v14.0.1 .for.body.1;
  v13.0.0: int = phi v13.0.1 .for.body.1;
  v12.0.0: int = phi v12.0.1 .for.body.1;
  v11.0.0: int = phi v11.0.1 .for.body.1;
  v10.0.0: int = phi v10.0.1 .for.body.1;
  sq.0.0: int = phi sq.0.1 .for.body.1;
  res.0.1: int = phi res.0.0 res.0.2 .sumOfSquares.b1 .for.body.1;
  i.0.1: int = phi i.0.0 i.0.2 .sumOfSquares.b1 .for.body.1;
  v3.0.1: int = id i.0.1;
  v4.0.1: int = id n.0;
  v5.0.1: bool = le v3.0.1 v4.0.1;
  br v5.0.1 .for.body.1 .for.end.1;
.for.body.1:
  v6.0.1: int = id i.0.1;
  v7.0.1: int = id i.0.1;
  v8.0.1: int = mul v6.0.1 v7.0.1;
  sq.0.1: int = id v8.0.1;
  v9.0.1: int = id res.0.1;
  v10.0.1: int = id sq.0.1;
  v11.0.1: int = add v9.0.1 v10.0.1;
  res.0.2: int = id v11.0.1;
  v12.0.1: int = id i.0.1;
  v13.0.1: int = const 1;
  v14.0.1: int = add v12.0.1 v13.0.1;
  i.0.2: int = id v14.0.1;
  jmp .for.cond.1;
.for.end.1:
  v15.0.0: int = id res.0.1;
  ret v15.0.0;
}
@squareOfSum(n.0: int): int {
.squareOfSum.b0:
  n.1: int = id n.0;
.squareOfSum.b1:
  v0.0.0: int = const 0;
  res.0.0: int = id v0.0.0;
  v2.0.0: int = const 1;
  i.0.0: int = id v2.0.0;
.for.cond.1:
  v9.0.0: int = phi v9.0.1 .for.body.1;
  v8.0.0: int = phi v8.0.1 .for.body.1;
  v7.0.0: int = phi v7.0.1 .for.body.1;
  v6.0.0: int = phi v6.0.1 .for.body.1;
  v5.0.0: bool = phi v5.0.1 .for.body.1;
  v4.0.0: int = phi v4.0.1 .for.body.1;
  v3.0.0: int = phi v3.0.1 .for.body.1;
  v11.0.0: int = phi v11.0.1 .for.body.1;
  v10.0.0: int = phi v10.0.1 .for.body.1;
  res.0.1: int = phi res.0.0 res.0.2 .squareOfSum.b1 .for.body.1;
  i.0.1: int = phi i.0.0 i.0.2 .squareOfSum.b1 .for.body.1;
  v3.0.1: int = id i.0.1;
  v4.0.1: int = id n.0;
  v5.0.1: bool = le v3.0.1 v4.0.1;
  br v5.0.1 .for.body.1 .for.end.1;
.for.body.1:
  v6.0.1: int = id res.0.1;
  v7.0.1: int = id i.0.1;
  v8.0.1: int = add v6.0.1 v7.0.1;
  res.0.2: int = id v8.0.1;
  v9.0.1: int = id i.0.1;
  v10.0.1: int = const 1;
  v11.0.1: int = add v9.0.1 v10.0.1;
  i.0.2: int = id v11.0.1;
  jmp .for.cond.1;
.for.end.1:
  v12.0.0: int = id res.0.1;
  v13.0.0: int = id res.0.1;
  v14.0.0: int = mul v12.0.0 v13.0.0;
  square.0.0: int = id v14.0.0;
  v15.0.0: int = id square.0.0;
  ret v15.0.0;
}
@main(n.0: int) {
.main.b0:
  n.1: int = id n.0;
.main.b1:
  v0.0.0: int = id n.0;
  sum.0.0: int = call @sumOfSquares v0.0.0;
  sum.0.1: int = id sum.0.0;
  v1.0.0: int = id n.0;
  square.0.0: int = call @squareOfSum v1.0.0;
  square.0.1: int = id square.0.0;
  v2.0.0: int = id square.0.1;
  v3.0.0: int = id sum.0.1;
  v4.0.0: int = sub v2.0.0 v3.0.0;
  diff.0.0: int = id v4.0.0;
  v5.0.0: int = id diff.0.0;
  print v5.0.0;
  v6.0.0: int = const 0;
  v7.0.0: int = id diff.0.0;
}
