@main(input.0.0: int) {
.main.b0:
  input.0.1: int = id input.0.0;
.main.b1:
  v1.0.0: int = const 1;
  index.0.0: int = id v1.0.0;
.for.cond.0:
  v9.0.0: int = phi v9.0.1 .endif.21;
  v8.0.0: int = phi v8.0.1 .endif.21;
  v7.0.0: int = phi v7.0.1 .endif.21;
  v6.0.0: int = phi v6.0.1 .endif.21;
  v5.0.0: int = phi v5.0.1 .endif.21;
  v43.0.0: int = phi v43.0.1 .endif.21;
  v42.0.0: int = phi v42.0.1 .endif.21;
  v41.0.0: int = phi v41.0.1 .endif.21;
  v40.0.0: int = phi v40.0.3 .endif.21;
  v4.0.0: bool = phi v4.0.1 .endif.21;
  v39.0.0: int = phi v39.0.3 .endif.21;
  v38.0.0: int = phi v38.0.3 .endif.21;
  v37.0.0: int = phi v37.0.3 .endif.21;
  v36.0.0: int = phi v36.0.3 .endif.21;
  v35.0.0: int = phi v35.0.3 .endif.21;
  v34.0.0: bool = phi v34.0.2 .endif.21;
  v32.0.0: int = phi v32.0.3 .endif.21;
  v31.0.0: int = phi v31.0.3 .endif.21;
  v30.0.0: int = phi v30.0.3 .endif.21;
  v29.0.0: int = phi v29.0.3 .endif.21;
  v28.0.0: int = phi v28.0.3 .endif.21;
  v27.0.0: int = phi v27.0.3 .endif.21;
  v26.0.0: int = phi v26.0.3 .endif.21;
  v25.0.0: int = phi v25.0.3 .endif.21;
  v24.0.0: bool = phi v24.0.2 .endif.21;
  v22.0.0: bool = phi v22.0.1 .endif.21;
  v20.0.0: bool = phi v20.0.1 .endif.21;
  v2.0.0: int = phi v2.0.1 .endif.21;
  v19.0.0: int = phi v19.0.1 .endif.21;
  v18.0.0: int = phi v18.0.1 .endif.21;
  v17.0.0: int = phi v17.0.1 .endif.21;
  v16.0.0: int = phi v16.0.1 .endif.21;
  v15.0.0: int = phi v15.0.1 .endif.21;
  v14.0.0: int = phi v14.0.1 .endif.21;
  v13.0.0: int = phi v13.0.1 .endif.21;
  v12.0.0: bool = phi v12.0.1 .endif.21;
  v11.0.0: int = phi v11.0.1 .endif.21;
  v10.0.0: int = phi v10.0.1 .endif.21;
  isFizz.0.0: bool = phi isFizz.0.1 .endif.21;
  isBuzz.0.0: bool = phi isBuzz.0.1 .endif.21;
  index.0.1: int = phi index.0.0 index.0.2 .main.b1 .endif.21;
  div5.0.0: int = phi div5.0.1 .endif.21;
  div3.0.0: int = phi div3.0.1 .endif.21;
  v2.0.1: int = id index.0.1;
  v4.0.1: bool = lt v2.0.1 input.0.1;
  br v4.0.1 .for.body.0 .for.end.0;
.for.body.0:
  v5.0.1: int = id index.0.1;
  v6.0.1: int = const 3;
  v7.0.1: int = div v5.0.1 v6.0.1;
  div3.0.1: int = id v7.0.1;
  v8.0.1: int = id div3.0.1;
  v9.0.1: int = const 3;
  v10.0.1: int = mul v8.0.1 v9.0.1;
  v11.0.1: int = id index.0.1;
  v12.0.1: bool = eq v10.0.1 v11.0.1;
  isFizz.0.1: bool = id v12.0.1;
  v13.0.1: int = id index.0.1;
  v14.0.1: int = const 5;
  v15.0.1: int = div v13.0.1 v14.0.1;
  div5.0.1: int = id v15.0.1;
  v16.0.1: int = id div5.0.1;
  v17.0.1: int = const 5;
  v18.0.1: int = mul v16.0.1 v17.0.1;
  v19.0.1: int = id index.0.1;
  v20.0.1: bool = eq v18.0.1 v19.0.1;
  isBuzz.0.1: bool = id v20.0.1;
  v22.0.1: bool = id isFizz.0.1;
  br v22.0.1 .then.21 .else.21;
.then.21:
  v24.0.1: bool = id isBuzz.0.1;
  br v24.0.1 .then.23 .else.23;
.then.23:
  v25.0.1: int = const 0;
  v26.0.1: int = const 1;
  v27.0.1: int = sub v25.0.1 v26.0.1;
  print v27.0.1;
  v28.0.1: int = const 0;
  jmp .endif.23;
.else.23:
  v29.0.1: int = const 0;
  v30.0.1: int = const 2;
  v31.0.1: int = sub v29.0.1 v30.0.1;
  print v31.0.1;
  v32.0.1: int = const 0;
.endif.23:
  v32.0.2: int = phi v32.0.0 v32.0.1 .then.23 .else.23;
  v31.0.2: int = phi v31.0.0 v31.0.1 .then.23 .else.23;
  v30.0.2: int = phi v30.0.0 v30.0.1 .then.23 .else.23;
  v29.0.2: int = phi v29.0.0 v29.0.1 .then.23 .else.23;
  v28.0.2: int = phi v28.0.1 v28.0.0 .then.23 .else.23;
  v27.0.2: int = phi v27.0.1 v27.0.0 .then.23 .else.23;
  v26.0.2: int = phi v26.0.1 v26.0.0 .then.23 .else.23;
  v25.0.2: int = phi v25.0.1 v25.0.0 .then.23 .else.23;
  jmp .endif.21;
.else.21:
  v34.0.1: bool = id isBuzz.0.1;
  br v34.0.1 .then.33 .else.33;
.then.33:
  v35.0.1: int = const 0;
  v36.0.1: int = const 3;
  v37.0.1: int = sub v35.0.1 v36.0.1;
  print v37.0.1;
  v38.0.1: int = const 0;
  jmp .endif.33;
.else.33:
  v39.0.1: int = id index.0.1;
  print v39.0.1;
  v40.0.1: int = const 0;
.endif.33:
  v40.0.2: int = phi v40.0.0 v40.0.1 .then.33 .else.33;
  v39.0.2: int = phi v39.0.0 v39.0.1 .then.33 .else.33;
  v38.0.2: int = phi v38.0.1 v38.0.0 .then.33 .else.33;
  v37.0.2: int = phi v37.0.1 v37.0.0 .then.33 .else.33;
  v36.0.2: int = phi v36.0.1 v36.0.0 .then.33 .else.33;
  v35.0.2: int = phi v35.0.1 v35.0.0 .then.33 .else.33;
.endif.21:
  v40.0.3: int = phi v40.0.2 v40.0.0 .endif.33 .endif.23;
  v39.0.3: int = phi v39.0.2 v39.0.0 .endif.33 .endif.23;
  v38.0.3: int = phi v38.0.2 v38.0.0 .endif.33 .endif.23;
  v37.0.3: int = phi v37.0.2 v37.0.0 .endif.33 .endif.23;
  v36.0.3: int = phi v36.0.2 v36.0.0 .endif.33 .endif.23;
  v35.0.3: int = phi v35.0.2 v35.0.0 .endif.33 .endif.23;
  v34.0.2: bool = phi v34.0.1 v34.0.0 .endif.33 .endif.23;
  v32.0.3: int = phi v32.0.0 v32.0.2 .endif.33 .endif.23;
  v31.0.3: int = phi v31.0.0 v31.0.2 .endif.33 .endif.23;
  v30.0.3: int = phi v30.0.0 v30.0.2 .endif.33 .endif.23;
  v29.0.3: int = phi v29.0.0 v29.0.2 .endif.33 .endif.23;
  v28.0.3: int = phi v28.0.0 v28.0.2 .endif.33 .endif.23;
  v27.0.3: int = phi v27.0.0 v27.0.2 .endif.33 .endif.23;
  v26.0.3: int = phi v26.0.0 v26.0.2 .endif.33 .endif.23;
  v25.0.3: int = phi v25.0.0 v25.0.2 .endif.33 .endif.23;
  v24.0.2: bool = phi v24.0.0 v24.0.1 .endif.33 .endif.23;
  v41.0.1: int = id index.0.1;
  v42.0.1: int = const 1;
  v43.0.1: int = add v41.0.1 v42.0.1;
  index.0.2: int = id v43.0.1;
  jmp .for.cond.0;
.for.end.0:
}
